

================================================================
== Vivado HLS Report for 'relu'
================================================================
* Date:           Fri Mar  6 00:01:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        relu_cnn
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.685|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  19165|  19165|  19165|  19165|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |- OFM     |  19164|  19164|      3194|          -|          -|     6|    no    |
        | + ROW    |   3192|   3192|       114|          -|          -|    28|    no    |
        |  ++ COL  |    112|    112|         4|          -|          -|    28|    no    |
        +----------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4704 x float]* %in_r) nounwind, !map !14"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4704 x float]* %out_r) nounwind, !map !21"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @relu_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.76ns)   --->   "br label %1" [relu_Alg.cpp:10]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.91>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%ofm_0 = phi i3 [ 0, %0 ], [ %ofm, %OFM_end ]"   --->   Operation 12 'phi' 'ofm_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.13ns)   --->   "%icmp_ln10 = icmp eq i3 %ofm_0, -2" [relu_Alg.cpp:10]   --->   Operation 13 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6) nounwind"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.65ns)   --->   "%ofm = add i3 %ofm_0, 1" [relu_Alg.cpp:10]   --->   Operation 15 'add' 'ofm' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %5, label %OFM_begin" [relu_Alg.cpp:10]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str) nounwind" [relu_Alg.cpp:10]   --->   Operation 17 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str) nounwind" [relu_Alg.cpp:10]   --->   Operation 18 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %ofm_0, i5 0)" [relu_Alg.cpp:13]   --->   Operation 19 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %tmp_4 to i9" [relu_Alg.cpp:13]   --->   Operation 20 'zext' 'zext_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_5 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %ofm_0, i2 0)" [relu_Alg.cpp:13]   --->   Operation 21 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i5 %tmp_5 to i9" [relu_Alg.cpp:13]   --->   Operation 22 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.91ns)   --->   "%sub_ln13 = sub i9 %zext_ln13, %zext_ln13_1" [relu_Alg.cpp:13]   --->   Operation 23 'sub' 'sub_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln13 = sext i9 %sub_ln13 to i10" [relu_Alg.cpp:13]   --->   Operation 24 'sext' 'sext_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.76ns)   --->   "br label %2" [relu_Alg.cpp:11]   --->   Operation 25 'br' <Predicate = (!icmp_ln10)> <Delay = 1.76>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "ret void" [relu_Alg.cpp:18]   --->   Operation 26 'ret' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.63>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%r_0 = phi i5 [ 0, %OFM_begin ], [ %r, %ROW_end ]"   --->   Operation 27 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.36ns)   --->   "%icmp_ln11 = icmp eq i5 %r_0, -4" [relu_Alg.cpp:11]   --->   Operation 28 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28) nounwind"   --->   Operation 29 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.78ns)   --->   "%r = add i5 %r_0, 1" [relu_Alg.cpp:11]   --->   Operation 30 'add' 'r' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %OFM_end, label %ROW_begin" [relu_Alg.cpp:11]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str1) nounwind" [relu_Alg.cpp:11]   --->   Operation 32 'specloopname' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str1) nounwind" [relu_Alg.cpp:11]   --->   Operation 33 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln13_2 = zext i5 %r_0 to i10" [relu_Alg.cpp:13]   --->   Operation 34 'zext' 'zext_ln13_2' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.82ns)   --->   "%add_ln13 = add i10 %sext_ln13, %zext_ln13_2" [relu_Alg.cpp:13]   --->   Operation 35 'add' 'add_ln13' <Predicate = (!icmp_ln11)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln13 = trunc i10 %add_ln13 to i9" [relu_Alg.cpp:13]   --->   Operation 36 'trunc' 'trunc_ln13' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%p_shl2_cast = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %trunc_ln13, i5 0)" [relu_Alg.cpp:13]   --->   Operation 37 'bitconcatenate' 'p_shl2_cast' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_6 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln13, i2 0)" [relu_Alg.cpp:13]   --->   Operation 38 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln13_1 = sext i12 %tmp_6 to i14" [relu_Alg.cpp:13]   --->   Operation 39 'sext' 'sext_ln13_1' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.81ns)   --->   "%sub_ln13_1 = sub i14 %p_shl2_cast, %sext_ln13_1" [relu_Alg.cpp:13]   --->   Operation 40 'sub' 'sub_ln13_1' <Predicate = (!icmp_ln11)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (1.76ns)   --->   "br label %3" [relu_Alg.cpp:12]   --->   Operation 41 'br' <Predicate = (!icmp_ln11)> <Delay = 1.76>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str, i32 %tmp_1) nounwind" [relu_Alg.cpp:17]   --->   Operation 42 'specregionend' 'empty_7' <Predicate = (icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "br label %1" [relu_Alg.cpp:10]   --->   Operation 43 'br' <Predicate = (icmp_ln11)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.06>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%c_0 = phi i5 [ 0, %ROW_begin ], [ %c, %4 ]"   --->   Operation 44 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (1.36ns)   --->   "%icmp_ln12 = icmp eq i5 %c_0, -4" [relu_Alg.cpp:12]   --->   Operation 45 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28) nounwind"   --->   Operation 46 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.78ns)   --->   "%c = add i5 %c_0, 1" [relu_Alg.cpp:12]   --->   Operation 47 'add' 'c' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %ROW_end, label %4" [relu_Alg.cpp:12]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln13_3 = zext i5 %c_0 to i14" [relu_Alg.cpp:13]   --->   Operation 49 'zext' 'zext_ln13_3' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (1.81ns)   --->   "%add_ln13_1 = add i14 %sub_ln13_1, %zext_ln13_3" [relu_Alg.cpp:13]   --->   Operation 50 'add' 'add_ln13_1' <Predicate = (!icmp_ln12)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln13_4 = zext i14 %add_ln13_1 to i64" [relu_Alg.cpp:13]   --->   Operation 51 'zext' 'zext_ln13_4' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%in_addr = getelementptr [4704 x float]* %in_r, i64 0, i64 %zext_ln13_4" [relu_Alg.cpp:13]   --->   Operation 52 'getelementptr' 'in_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_4 : Operation 53 [2/2] (3.25ns)   --->   "%data = load float* %in_addr, align 4" [relu_Alg.cpp:13]   --->   Operation 53 'load' 'data' <Predicate = (!icmp_ln12)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4704> <RAM>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str1, i32 %tmp_2) nounwind" [relu_Alg.cpp:16]   --->   Operation 54 'specregionend' 'empty_6' <Predicate = (icmp_ln12)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br label %2" [relu_Alg.cpp:11]   --->   Operation 55 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.68>
ST_5 : Operation 56 [1/2] (3.25ns)   --->   "%data = load float* %in_addr, align 4" [relu_Alg.cpp:13]   --->   Operation 56 'load' 'data' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4704> <RAM>
ST_5 : Operation 57 [2/2] (5.43ns)   --->   "%tmp_3 = fcmp ogt float %data, 0.000000e+00" [relu_Alg.cpp:14]   --->   Operation 57 'fcmp' 'tmp_3' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.40>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln14 = bitcast float %data to i32" [relu_Alg.cpp:14]   --->   Operation 58 'bitcast' 'bitcast_ln14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln14, i32 23, i32 30)" [relu_Alg.cpp:14]   --->   Operation 59 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln14 = trunc i32 %bitcast_ln14 to i23" [relu_Alg.cpp:14]   --->   Operation 60 'trunc' 'trunc_ln14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (1.55ns)   --->   "%icmp_ln14 = icmp ne i8 %tmp, -1" [relu_Alg.cpp:14]   --->   Operation 61 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (2.44ns)   --->   "%icmp_ln14_1 = icmp eq i23 %trunc_ln14, 0" [relu_Alg.cpp:14]   --->   Operation 62 'icmp' 'icmp_ln14_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node data_1)   --->   "%or_ln14 = or i1 %icmp_ln14_1, %icmp_ln14" [relu_Alg.cpp:14]   --->   Operation 63 'or' 'or_ln14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/2] (5.43ns)   --->   "%tmp_3 = fcmp ogt float %data, 0.000000e+00" [relu_Alg.cpp:14]   --->   Operation 64 'fcmp' 'tmp_3' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node data_1)   --->   "%and_ln14 = and i1 %or_ln14, %tmp_3" [relu_Alg.cpp:14]   --->   Operation 65 'and' 'and_ln14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%data_1 = select i1 %and_ln14, float %data, float 0.000000e+00" [relu_Alg.cpp:14]   --->   Operation 66 'select' 'data_1' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.25>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str2) nounwind" [relu_Alg.cpp:12]   --->   Operation 67 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [4704 x float]* %out_r, i64 0, i64 %zext_ln13_4" [relu_Alg.cpp:14]   --->   Operation 68 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (3.25ns)   --->   "store float %data_1, float* %out_addr, align 4" [relu_Alg.cpp:14]   --->   Operation 69 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4704> <RAM>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "br label %3" [relu_Alg.cpp:12]   --->   Operation 70 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('ofm') with incoming values : ('ofm', relu_Alg.cpp:10) [8]  (1.77 ns)

 <State 2>: 1.92ns
The critical path consists of the following:
	'phi' operation ('ofm') with incoming values : ('ofm', relu_Alg.cpp:10) [8]  (0 ns)
	'sub' operation ('sub_ln13', relu_Alg.cpp:13) [20]  (1.92 ns)

 <State 3>: 3.63ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', relu_Alg.cpp:11) [24]  (0 ns)
	'add' operation ('add_ln13', relu_Alg.cpp:13) [33]  (1.82 ns)
	'sub' operation ('sub_ln13_1', relu_Alg.cpp:13) [38]  (1.81 ns)

 <State 4>: 5.07ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', relu_Alg.cpp:12) [41]  (0 ns)
	'add' operation ('add_ln13_1', relu_Alg.cpp:13) [49]  (1.81 ns)
	'getelementptr' operation ('in_addr', relu_Alg.cpp:13) [51]  (0 ns)
	'load' operation ('data', relu_Alg.cpp:13) on array 'in_r' [53]  (3.25 ns)

 <State 5>: 8.69ns
The critical path consists of the following:
	'load' operation ('data', relu_Alg.cpp:13) on array 'in_r' [53]  (3.25 ns)
	'fcmp' operation ('tmp_3', relu_Alg.cpp:14) [60]  (5.43 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_3', relu_Alg.cpp:14) [60]  (5.43 ns)
	'and' operation ('and_ln14', relu_Alg.cpp:14) [61]  (0 ns)
	'select' operation ('data', relu_Alg.cpp:14) [62]  (0.978 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('out_addr', relu_Alg.cpp:14) [52]  (0 ns)
	'store' operation ('store_ln14', relu_Alg.cpp:14) of variable 'data', relu_Alg.cpp:14 on array 'out_r' [63]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
