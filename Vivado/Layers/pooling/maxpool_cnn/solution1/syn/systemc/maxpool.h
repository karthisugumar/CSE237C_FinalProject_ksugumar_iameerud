// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _maxpool_HH_
#define _maxpool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "maxpool_fcmp_32nsbkb.h"

namespace ap_rtl {

struct maxpool : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<13> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    maxpool(sc_module_name name);
    SC_HAS_PROCESS(maxpool);

    ~maxpool();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    maxpool_fcmp_32nsbkb<1,2,32,32,1>* maxpool_fcmp_32nsbkb_U1;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > sext_ln22_fu_221_p1;
    sc_signal< sc_lv<11> > sext_ln22_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln11_fu_175_p2;
    sc_signal< sc_lv<5> > add_ln11_fu_231_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln12_fu_225_p2;
    sc_signal< sc_lv<2> > add_ln14_fu_247_p2;
    sc_signal< sc_lv<2> > add_ln14_reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > sub_ln16_fu_283_p2;
    sc_signal< sc_lv<11> > sub_ln16_reg_469;
    sc_signal< sc_lv<1> > icmp_ln14_fu_241_p2;
    sc_signal< sc_lv<5> > add_ln12_fu_313_p2;
    sc_signal< sc_lv<2> > add_ln15_fu_329_p2;
    sc_signal< sc_lv<2> > add_ln15_reg_482;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln15_fu_323_p2;
    sc_signal< sc_lv<32> > in_load_reg_492;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > select_ln17_fu_438_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > r_0_0_reg_98;
    sc_signal< sc_lv<5> > c_0_0_reg_110;
    sc_signal< sc_lv<32> > max_3_0_reg_122;
    sc_signal< sc_lv<2> > k_r_0_0_reg_135;
    sc_signal< sc_lv<32> > max_4_0_reg_146;
    sc_signal< sc_lv<2> > k_c_0_0_reg_158;
    sc_signal< sc_lv<64> > sext_ln22_1_fu_308_p1;
    sc_signal< sc_lv<64> > sext_ln16_fu_350_p1;
    sc_signal< sc_lv<4> > tmp_7_fu_181_p4;
    sc_signal< sc_lv<9> > tmp_8_fu_191_p3;
    sc_signal< sc_lv<6> > tmp_s_fu_203_p3;
    sc_signal< sc_lv<10> > zext_ln22_fu_199_p1;
    sc_signal< sc_lv<10> > zext_ln22_1_fu_211_p1;
    sc_signal< sc_lv<10> > sub_ln22_fu_215_p2;
    sc_signal< sc_lv<5> > zext_ln14_fu_237_p1;
    sc_signal< sc_lv<5> > add_ln16_fu_253_p2;
    sc_signal< sc_lv<10> > tmp_10_fu_259_p3;
    sc_signal< sc_lv<7> > tmp_11_fu_271_p3;
    sc_signal< sc_lv<11> > zext_ln16_fu_267_p1;
    sc_signal< sc_lv<11> > zext_ln16_1_fu_279_p1;
    sc_signal< sc_lv<4> > tmp_9_fu_289_p4;
    sc_signal< sc_lv<11> > zext_ln22_2_fu_299_p1;
    sc_signal< sc_lv<11> > add_ln22_fu_303_p2;
    sc_signal< sc_lv<5> > zext_ln15_fu_319_p1;
    sc_signal< sc_lv<5> > add_ln16_1_fu_335_p2;
    sc_signal< sc_lv<11> > zext_ln16_2_fu_341_p1;
    sc_signal< sc_lv<11> > add_ln16_2_fu_345_p2;
    sc_signal< sc_lv<32> > bitcast_ln17_fu_355_p1;
    sc_signal< sc_lv<32> > bitcast_ln17_1_fu_372_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_358_p4;
    sc_signal< sc_lv<23> > trunc_ln17_fu_368_p1;
    sc_signal< sc_lv<1> > icmp_ln17_1_fu_396_p2;
    sc_signal< sc_lv<1> > icmp_ln17_fu_390_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_376_p4;
    sc_signal< sc_lv<23> > trunc_ln17_1_fu_386_p1;
    sc_signal< sc_lv<1> > icmp_ln17_3_fu_414_p2;
    sc_signal< sc_lv<1> > icmp_ln17_2_fu_408_p2;
    sc_signal< sc_lv<1> > or_ln17_fu_402_p2;
    sc_signal< sc_lv<1> > or_ln17_1_fu_420_p2;
    sc_signal< sc_lv<1> > and_ln17_fu_426_p2;
    sc_signal< sc_lv<1> > grp_fu_169_p2;
    sc_signal< sc_lv<1> > and_ln17_1_fu_432_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_fu_231_p2();
    void thread_add_ln12_fu_313_p2();
    void thread_add_ln14_fu_247_p2();
    void thread_add_ln15_fu_329_p2();
    void thread_add_ln16_1_fu_335_p2();
    void thread_add_ln16_2_fu_345_p2();
    void thread_add_ln16_fu_253_p2();
    void thread_add_ln22_fu_303_p2();
    void thread_and_ln17_1_fu_432_p2();
    void thread_and_ln17_fu_426_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln17_1_fu_372_p1();
    void thread_bitcast_ln17_fu_355_p1();
    void thread_icmp_ln11_fu_175_p2();
    void thread_icmp_ln12_fu_225_p2();
    void thread_icmp_ln14_fu_241_p2();
    void thread_icmp_ln15_fu_323_p2();
    void thread_icmp_ln17_1_fu_396_p2();
    void thread_icmp_ln17_2_fu_408_p2();
    void thread_icmp_ln17_3_fu_414_p2();
    void thread_icmp_ln17_fu_390_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_or_ln17_1_fu_420_p2();
    void thread_or_ln17_fu_402_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_select_ln17_fu_438_p3();
    void thread_sext_ln16_fu_350_p1();
    void thread_sext_ln22_1_fu_308_p1();
    void thread_sext_ln22_fu_221_p1();
    void thread_sub_ln16_fu_283_p2();
    void thread_sub_ln22_fu_215_p2();
    void thread_tmp_10_fu_259_p3();
    void thread_tmp_11_fu_271_p3();
    void thread_tmp_4_fu_358_p4();
    void thread_tmp_5_fu_376_p4();
    void thread_tmp_7_fu_181_p4();
    void thread_tmp_8_fu_191_p3();
    void thread_tmp_9_fu_289_p4();
    void thread_tmp_s_fu_203_p3();
    void thread_trunc_ln17_1_fu_386_p1();
    void thread_trunc_ln17_fu_368_p1();
    void thread_zext_ln14_fu_237_p1();
    void thread_zext_ln15_fu_319_p1();
    void thread_zext_ln16_1_fu_279_p1();
    void thread_zext_ln16_2_fu_341_p1();
    void thread_zext_ln16_fu_267_p1();
    void thread_zext_ln22_1_fu_211_p1();
    void thread_zext_ln22_2_fu_299_p1();
    void thread_zext_ln22_fu_199_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
