// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "maxpool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic maxpool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic maxpool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> maxpool::ap_ST_fsm_state1 = "1";
const sc_lv<7> maxpool::ap_ST_fsm_state2 = "10";
const sc_lv<7> maxpool::ap_ST_fsm_state3 = "100";
const sc_lv<7> maxpool::ap_ST_fsm_state4 = "1000";
const sc_lv<7> maxpool::ap_ST_fsm_state5 = "10000";
const sc_lv<7> maxpool::ap_ST_fsm_state6 = "100000";
const sc_lv<7> maxpool::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> maxpool::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> maxpool::ap_const_lv32_1 = "1";
const sc_lv<1> maxpool::ap_const_lv1_1 = "1";
const sc_lv<32> maxpool::ap_const_lv32_2 = "10";
const sc_lv<1> maxpool::ap_const_lv1_0 = "0";
const sc_lv<32> maxpool::ap_const_lv32_3 = "11";
const sc_lv<32> maxpool::ap_const_lv32_4 = "100";
const sc_lv<32> maxpool::ap_const_lv32_5 = "101";
const sc_lv<32> maxpool::ap_const_lv32_6 = "110";
const sc_lv<5> maxpool::ap_const_lv5_0 = "00000";
const sc_lv<2> maxpool::ap_const_lv2_0 = "00";
const sc_lv<5> maxpool::ap_const_lv5_1C = "11100";
const sc_lv<5> maxpool::ap_const_lv5_2 = "10";
const sc_lv<2> maxpool::ap_const_lv2_2 = "10";
const sc_lv<2> maxpool::ap_const_lv2_1 = "1";
const sc_lv<32> maxpool::ap_const_lv32_17 = "10111";
const sc_lv<32> maxpool::ap_const_lv32_1E = "11110";
const sc_lv<8> maxpool::ap_const_lv8_FF = "11111111";
const sc_lv<23> maxpool::ap_const_lv23_0 = "00000000000000000000000";
const bool maxpool::ap_const_boolean_1 = true;

maxpool::maxpool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    maxpool_fcmp_32nsbkb_U1 = new maxpool_fcmp_32nsbkb<1,2,32,32,1>("maxpool_fcmp_32nsbkb_U1");
    maxpool_fcmp_32nsbkb_U1->clk(ap_clk);
    maxpool_fcmp_32nsbkb_U1->reset(ap_rst);
    maxpool_fcmp_32nsbkb_U1->din0(in_r_q0);
    maxpool_fcmp_32nsbkb_U1->din1(max_4_0_reg_146);
    maxpool_fcmp_32nsbkb_U1->ce(ap_var_for_const0);
    maxpool_fcmp_32nsbkb_U1->opcode(ap_var_for_const1);
    maxpool_fcmp_32nsbkb_U1->dout(grp_fu_169_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln11_fu_231_p2);
    sensitive << ( r_0_0_reg_98 );

    SC_METHOD(thread_add_ln12_fu_313_p2);
    sensitive << ( c_0_0_reg_110 );

    SC_METHOD(thread_add_ln14_fu_247_p2);
    sensitive << ( k_r_0_0_reg_135 );

    SC_METHOD(thread_add_ln15_fu_329_p2);
    sensitive << ( k_c_0_0_reg_158 );

    SC_METHOD(thread_add_ln16_1_fu_335_p2);
    sensitive << ( c_0_0_reg_110 );
    sensitive << ( zext_ln15_fu_319_p1 );

    SC_METHOD(thread_add_ln16_2_fu_345_p2);
    sensitive << ( sub_ln16_reg_469 );
    sensitive << ( zext_ln16_2_fu_341_p1 );

    SC_METHOD(thread_add_ln16_fu_253_p2);
    sensitive << ( r_0_0_reg_98 );
    sensitive << ( zext_ln14_fu_237_p1 );

    SC_METHOD(thread_add_ln22_fu_303_p2);
    sensitive << ( sext_ln22_reg_448 );
    sensitive << ( zext_ln22_2_fu_299_p1 );

    SC_METHOD(thread_and_ln17_1_fu_432_p2);
    sensitive << ( and_ln17_fu_426_p2 );
    sensitive << ( grp_fu_169_p2 );

    SC_METHOD(thread_and_ln17_fu_426_p2);
    sensitive << ( or_ln17_fu_402_p2 );
    sensitive << ( or_ln17_1_fu_420_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_175_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_175_p2 );

    SC_METHOD(thread_bitcast_ln17_1_fu_372_p1);
    sensitive << ( max_4_0_reg_146 );

    SC_METHOD(thread_bitcast_ln17_fu_355_p1);
    sensitive << ( in_load_reg_492 );

    SC_METHOD(thread_icmp_ln11_fu_175_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_0_reg_98 );

    SC_METHOD(thread_icmp_ln12_fu_225_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_0_reg_110 );

    SC_METHOD(thread_icmp_ln14_fu_241_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_r_0_0_reg_135 );

    SC_METHOD(thread_icmp_ln15_fu_323_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_c_0_0_reg_158 );

    SC_METHOD(thread_icmp_ln17_1_fu_396_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( trunc_ln17_fu_368_p1 );

    SC_METHOD(thread_icmp_ln17_2_fu_408_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_5_fu_376_p4 );

    SC_METHOD(thread_icmp_ln17_3_fu_414_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( trunc_ln17_1_fu_386_p1 );

    SC_METHOD(thread_icmp_ln17_fu_390_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_4_fu_358_p4 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln16_fu_350_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_or_ln17_1_fu_420_p2);
    sensitive << ( icmp_ln17_3_fu_414_p2 );
    sensitive << ( icmp_ln17_2_fu_408_p2 );

    SC_METHOD(thread_or_ln17_fu_402_p2);
    sensitive << ( icmp_ln17_1_fu_396_p2 );
    sensitive << ( icmp_ln17_fu_390_p2 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln22_1_fu_308_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( max_3_0_reg_122 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln14_fu_241_p2 );

    SC_METHOD(thread_select_ln17_fu_438_p3);
    sensitive << ( in_load_reg_492 );
    sensitive << ( max_4_0_reg_146 );
    sensitive << ( and_ln17_1_fu_432_p2 );

    SC_METHOD(thread_sext_ln16_fu_350_p1);
    sensitive << ( add_ln16_2_fu_345_p2 );

    SC_METHOD(thread_sext_ln22_1_fu_308_p1);
    sensitive << ( add_ln22_fu_303_p2 );

    SC_METHOD(thread_sext_ln22_fu_221_p1);
    sensitive << ( sub_ln22_fu_215_p2 );

    SC_METHOD(thread_sub_ln16_fu_283_p2);
    sensitive << ( zext_ln16_fu_267_p1 );
    sensitive << ( zext_ln16_1_fu_279_p1 );

    SC_METHOD(thread_sub_ln22_fu_215_p2);
    sensitive << ( zext_ln22_fu_199_p1 );
    sensitive << ( zext_ln22_1_fu_211_p1 );

    SC_METHOD(thread_tmp_10_fu_259_p3);
    sensitive << ( add_ln16_fu_253_p2 );

    SC_METHOD(thread_tmp_11_fu_271_p3);
    sensitive << ( add_ln16_fu_253_p2 );

    SC_METHOD(thread_tmp_4_fu_358_p4);
    sensitive << ( bitcast_ln17_fu_355_p1 );

    SC_METHOD(thread_tmp_5_fu_376_p4);
    sensitive << ( bitcast_ln17_1_fu_372_p1 );

    SC_METHOD(thread_tmp_7_fu_181_p4);
    sensitive << ( r_0_0_reg_98 );

    SC_METHOD(thread_tmp_8_fu_191_p3);
    sensitive << ( tmp_7_fu_181_p4 );

    SC_METHOD(thread_tmp_9_fu_289_p4);
    sensitive << ( c_0_0_reg_110 );

    SC_METHOD(thread_tmp_s_fu_203_p3);
    sensitive << ( tmp_7_fu_181_p4 );

    SC_METHOD(thread_trunc_ln17_1_fu_386_p1);
    sensitive << ( bitcast_ln17_1_fu_372_p1 );

    SC_METHOD(thread_trunc_ln17_fu_368_p1);
    sensitive << ( bitcast_ln17_fu_355_p1 );

    SC_METHOD(thread_zext_ln14_fu_237_p1);
    sensitive << ( k_r_0_0_reg_135 );

    SC_METHOD(thread_zext_ln15_fu_319_p1);
    sensitive << ( k_c_0_0_reg_158 );

    SC_METHOD(thread_zext_ln16_1_fu_279_p1);
    sensitive << ( tmp_11_fu_271_p3 );

    SC_METHOD(thread_zext_ln16_2_fu_341_p1);
    sensitive << ( add_ln16_1_fu_335_p2 );

    SC_METHOD(thread_zext_ln16_fu_267_p1);
    sensitive << ( tmp_10_fu_259_p3 );

    SC_METHOD(thread_zext_ln22_1_fu_211_p1);
    sensitive << ( tmp_s_fu_203_p3 );

    SC_METHOD(thread_zext_ln22_2_fu_299_p1);
    sensitive << ( tmp_9_fu_289_p4 );

    SC_METHOD(thread_zext_ln22_fu_199_p1);
    sensitive << ( tmp_8_fu_191_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_175_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln12_fu_225_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln14_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_323_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "maxpool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sext_ln22_fu_221_p1, "sext_ln22_fu_221_p1");
    sc_trace(mVcdFile, sext_ln22_reg_448, "sext_ln22_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln11_fu_175_p2, "icmp_ln11_fu_175_p2");
    sc_trace(mVcdFile, add_ln11_fu_231_p2, "add_ln11_fu_231_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln12_fu_225_p2, "icmp_ln12_fu_225_p2");
    sc_trace(mVcdFile, add_ln14_fu_247_p2, "add_ln14_fu_247_p2");
    sc_trace(mVcdFile, add_ln14_reg_464, "add_ln14_reg_464");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sub_ln16_fu_283_p2, "sub_ln16_fu_283_p2");
    sc_trace(mVcdFile, sub_ln16_reg_469, "sub_ln16_reg_469");
    sc_trace(mVcdFile, icmp_ln14_fu_241_p2, "icmp_ln14_fu_241_p2");
    sc_trace(mVcdFile, add_ln12_fu_313_p2, "add_ln12_fu_313_p2");
    sc_trace(mVcdFile, add_ln15_fu_329_p2, "add_ln15_fu_329_p2");
    sc_trace(mVcdFile, add_ln15_reg_482, "add_ln15_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln15_fu_323_p2, "icmp_ln15_fu_323_p2");
    sc_trace(mVcdFile, in_load_reg_492, "in_load_reg_492");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, select_ln17_fu_438_p3, "select_ln17_fu_438_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, r_0_0_reg_98, "r_0_0_reg_98");
    sc_trace(mVcdFile, c_0_0_reg_110, "c_0_0_reg_110");
    sc_trace(mVcdFile, max_3_0_reg_122, "max_3_0_reg_122");
    sc_trace(mVcdFile, k_r_0_0_reg_135, "k_r_0_0_reg_135");
    sc_trace(mVcdFile, max_4_0_reg_146, "max_4_0_reg_146");
    sc_trace(mVcdFile, k_c_0_0_reg_158, "k_c_0_0_reg_158");
    sc_trace(mVcdFile, sext_ln22_1_fu_308_p1, "sext_ln22_1_fu_308_p1");
    sc_trace(mVcdFile, sext_ln16_fu_350_p1, "sext_ln16_fu_350_p1");
    sc_trace(mVcdFile, tmp_7_fu_181_p4, "tmp_7_fu_181_p4");
    sc_trace(mVcdFile, tmp_8_fu_191_p3, "tmp_8_fu_191_p3");
    sc_trace(mVcdFile, tmp_s_fu_203_p3, "tmp_s_fu_203_p3");
    sc_trace(mVcdFile, zext_ln22_fu_199_p1, "zext_ln22_fu_199_p1");
    sc_trace(mVcdFile, zext_ln22_1_fu_211_p1, "zext_ln22_1_fu_211_p1");
    sc_trace(mVcdFile, sub_ln22_fu_215_p2, "sub_ln22_fu_215_p2");
    sc_trace(mVcdFile, zext_ln14_fu_237_p1, "zext_ln14_fu_237_p1");
    sc_trace(mVcdFile, add_ln16_fu_253_p2, "add_ln16_fu_253_p2");
    sc_trace(mVcdFile, tmp_10_fu_259_p3, "tmp_10_fu_259_p3");
    sc_trace(mVcdFile, tmp_11_fu_271_p3, "tmp_11_fu_271_p3");
    sc_trace(mVcdFile, zext_ln16_fu_267_p1, "zext_ln16_fu_267_p1");
    sc_trace(mVcdFile, zext_ln16_1_fu_279_p1, "zext_ln16_1_fu_279_p1");
    sc_trace(mVcdFile, tmp_9_fu_289_p4, "tmp_9_fu_289_p4");
    sc_trace(mVcdFile, zext_ln22_2_fu_299_p1, "zext_ln22_2_fu_299_p1");
    sc_trace(mVcdFile, add_ln22_fu_303_p2, "add_ln22_fu_303_p2");
    sc_trace(mVcdFile, zext_ln15_fu_319_p1, "zext_ln15_fu_319_p1");
    sc_trace(mVcdFile, add_ln16_1_fu_335_p2, "add_ln16_1_fu_335_p2");
    sc_trace(mVcdFile, zext_ln16_2_fu_341_p1, "zext_ln16_2_fu_341_p1");
    sc_trace(mVcdFile, add_ln16_2_fu_345_p2, "add_ln16_2_fu_345_p2");
    sc_trace(mVcdFile, bitcast_ln17_fu_355_p1, "bitcast_ln17_fu_355_p1");
    sc_trace(mVcdFile, bitcast_ln17_1_fu_372_p1, "bitcast_ln17_1_fu_372_p1");
    sc_trace(mVcdFile, tmp_4_fu_358_p4, "tmp_4_fu_358_p4");
    sc_trace(mVcdFile, trunc_ln17_fu_368_p1, "trunc_ln17_fu_368_p1");
    sc_trace(mVcdFile, icmp_ln17_1_fu_396_p2, "icmp_ln17_1_fu_396_p2");
    sc_trace(mVcdFile, icmp_ln17_fu_390_p2, "icmp_ln17_fu_390_p2");
    sc_trace(mVcdFile, tmp_5_fu_376_p4, "tmp_5_fu_376_p4");
    sc_trace(mVcdFile, trunc_ln17_1_fu_386_p1, "trunc_ln17_1_fu_386_p1");
    sc_trace(mVcdFile, icmp_ln17_3_fu_414_p2, "icmp_ln17_3_fu_414_p2");
    sc_trace(mVcdFile, icmp_ln17_2_fu_408_p2, "icmp_ln17_2_fu_408_p2");
    sc_trace(mVcdFile, or_ln17_fu_402_p2, "or_ln17_fu_402_p2");
    sc_trace(mVcdFile, or_ln17_1_fu_420_p2, "or_ln17_1_fu_420_p2");
    sc_trace(mVcdFile, and_ln17_fu_426_p2, "and_ln17_fu_426_p2");
    sc_trace(mVcdFile, grp_fu_169_p2, "grp_fu_169_p2");
    sc_trace(mVcdFile, and_ln17_1_fu_432_p2, "and_ln17_1_fu_432_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("maxpool.hdltvin.dat");
    mHdltvoutHandle.open("maxpool.hdltvout.dat");
}

maxpool::~maxpool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete maxpool_fcmp_32nsbkb_U1;
}

void maxpool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void maxpool::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void maxpool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_241_p2.read()))) {
        c_0_0_reg_110 = add_ln12_fu_313_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln11_fu_175_p2.read(), ap_const_lv1_1))) {
        c_0_0_reg_110 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        k_c_0_0_reg_158 = add_ln15_reg_482.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_241_p2.read()))) {
        k_c_0_0_reg_158 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_323_p2.read()))) {
        k_r_0_0_reg_135 = add_ln14_reg_464.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_225_p2.read()))) {
        k_r_0_0_reg_135 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_323_p2.read()))) {
        max_3_0_reg_122 = max_4_0_reg_146.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_225_p2.read()))) {
        max_3_0_reg_122 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_4_0_reg_146 = select_ln17_fu_438_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_241_p2.read()))) {
        max_4_0_reg_146 = max_3_0_reg_122.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_225_p2.read(), ap_const_lv1_0))) {
        r_0_0_reg_98 = add_ln11_fu_231_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_0_reg_98 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln14_reg_464 = add_ln14_fu_247_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln15_reg_482 = add_ln15_fu_329_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_load_reg_492 = in_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_175_p2.read(), ap_const_lv1_1))) {
        sext_ln22_reg_448 = sext_ln22_fu_221_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_241_p2.read()))) {
        sub_ln16_reg_469 = sub_ln16_fu_283_p2.read();
    }
}

void maxpool::thread_add_ln11_fu_231_p2() {
    add_ln11_fu_231_p2 = (!r_0_0_reg_98.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(r_0_0_reg_98.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void maxpool::thread_add_ln12_fu_313_p2() {
    add_ln12_fu_313_p2 = (!c_0_0_reg_110.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(c_0_0_reg_110.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void maxpool::thread_add_ln14_fu_247_p2() {
    add_ln14_fu_247_p2 = (!k_r_0_0_reg_135.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_r_0_0_reg_135.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void maxpool::thread_add_ln15_fu_329_p2() {
    add_ln15_fu_329_p2 = (!k_c_0_0_reg_158.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_c_0_0_reg_158.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void maxpool::thread_add_ln16_1_fu_335_p2() {
    add_ln16_1_fu_335_p2 = (!zext_ln15_fu_319_p1.read().is_01() || !c_0_0_reg_110.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln15_fu_319_p1.read()) + sc_biguint<5>(c_0_0_reg_110.read()));
}

void maxpool::thread_add_ln16_2_fu_345_p2() {
    add_ln16_2_fu_345_p2 = (!sub_ln16_reg_469.read().is_01() || !zext_ln16_2_fu_341_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln16_reg_469.read()) + sc_biguint<11>(zext_ln16_2_fu_341_p1.read()));
}

void maxpool::thread_add_ln16_fu_253_p2() {
    add_ln16_fu_253_p2 = (!zext_ln14_fu_237_p1.read().is_01() || !r_0_0_reg_98.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln14_fu_237_p1.read()) + sc_biguint<5>(r_0_0_reg_98.read()));
}

void maxpool::thread_add_ln22_fu_303_p2() {
    add_ln22_fu_303_p2 = (!sext_ln22_reg_448.read().is_01() || !zext_ln22_2_fu_299_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(sext_ln22_reg_448.read()) + sc_biguint<11>(zext_ln22_2_fu_299_p1.read()));
}

void maxpool::thread_and_ln17_1_fu_432_p2() {
    and_ln17_1_fu_432_p2 = (and_ln17_fu_426_p2.read() & grp_fu_169_p2.read());
}

void maxpool::thread_and_ln17_fu_426_p2() {
    and_ln17_fu_426_p2 = (or_ln17_fu_402_p2.read() & or_ln17_1_fu_420_p2.read());
}

void maxpool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void maxpool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void maxpool::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void maxpool::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void maxpool::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void maxpool::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void maxpool::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void maxpool::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_175_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void maxpool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void maxpool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_175_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void maxpool::thread_bitcast_ln17_1_fu_372_p1() {
    bitcast_ln17_1_fu_372_p1 = max_4_0_reg_146.read();
}

void maxpool::thread_bitcast_ln17_fu_355_p1() {
    bitcast_ln17_fu_355_p1 = in_load_reg_492.read();
}

void maxpool::thread_icmp_ln11_fu_175_p2() {
    icmp_ln11_fu_175_p2 = (!r_0_0_reg_98.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): (sc_biguint<5>(r_0_0_reg_98.read()) < sc_biguint<5>(ap_const_lv5_1C));
}

void maxpool::thread_icmp_ln12_fu_225_p2() {
    icmp_ln12_fu_225_p2 = (!c_0_0_reg_110.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): (sc_biguint<5>(c_0_0_reg_110.read()) < sc_biguint<5>(ap_const_lv5_1C));
}

void maxpool::thread_icmp_ln14_fu_241_p2() {
    icmp_ln14_fu_241_p2 = (!k_r_0_0_reg_135.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_r_0_0_reg_135.read() == ap_const_lv2_2);
}

void maxpool::thread_icmp_ln15_fu_323_p2() {
    icmp_ln15_fu_323_p2 = (!k_c_0_0_reg_158.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_c_0_0_reg_158.read() == ap_const_lv2_2);
}

void maxpool::thread_icmp_ln17_1_fu_396_p2() {
    icmp_ln17_1_fu_396_p2 = (!trunc_ln17_fu_368_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln17_fu_368_p1.read() == ap_const_lv23_0);
}

void maxpool::thread_icmp_ln17_2_fu_408_p2() {
    icmp_ln17_2_fu_408_p2 = (!tmp_5_fu_376_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_376_p4.read() != ap_const_lv8_FF);
}

void maxpool::thread_icmp_ln17_3_fu_414_p2() {
    icmp_ln17_3_fu_414_p2 = (!trunc_ln17_1_fu_386_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln17_1_fu_386_p1.read() == ap_const_lv23_0);
}

void maxpool::thread_icmp_ln17_fu_390_p2() {
    icmp_ln17_fu_390_p2 = (!tmp_4_fu_358_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_358_p4.read() != ap_const_lv8_FF);
}

void maxpool::thread_in_r_address0() {
    in_r_address0 =  (sc_lv<10>) (sext_ln16_fu_350_p1.read());
}

void maxpool::thread_in_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void maxpool::thread_or_ln17_1_fu_420_p2() {
    or_ln17_1_fu_420_p2 = (icmp_ln17_3_fu_414_p2.read() | icmp_ln17_2_fu_408_p2.read());
}

void maxpool::thread_or_ln17_fu_402_p2() {
    or_ln17_fu_402_p2 = (icmp_ln17_1_fu_396_p2.read() | icmp_ln17_fu_390_p2.read());
}

void maxpool::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<13>) (sext_ln22_1_fu_308_p1.read());
}

void maxpool::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void maxpool::thread_out_r_d0() {
    out_r_d0 = max_3_0_reg_122.read();
}

void maxpool::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_241_p2.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void maxpool::thread_select_ln17_fu_438_p3() {
    select_ln17_fu_438_p3 = (!and_ln17_1_fu_432_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln17_1_fu_432_p2.read()[0].to_bool())? in_load_reg_492.read(): max_4_0_reg_146.read());
}

void maxpool::thread_sext_ln16_fu_350_p1() {
    sext_ln16_fu_350_p1 = esl_sext<64,11>(add_ln16_2_fu_345_p2.read());
}

void maxpool::thread_sext_ln22_1_fu_308_p1() {
    sext_ln22_1_fu_308_p1 = esl_sext<64,11>(add_ln22_fu_303_p2.read());
}

void maxpool::thread_sext_ln22_fu_221_p1() {
    sext_ln22_fu_221_p1 = esl_sext<11,10>(sub_ln22_fu_215_p2.read());
}

void maxpool::thread_sub_ln16_fu_283_p2() {
    sub_ln16_fu_283_p2 = (!zext_ln16_fu_267_p1.read().is_01() || !zext_ln16_1_fu_279_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln16_fu_267_p1.read()) - sc_biguint<11>(zext_ln16_1_fu_279_p1.read()));
}

void maxpool::thread_sub_ln22_fu_215_p2() {
    sub_ln22_fu_215_p2 = (!zext_ln22_fu_199_p1.read().is_01() || !zext_ln22_1_fu_211_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln22_fu_199_p1.read()) - sc_biguint<10>(zext_ln22_1_fu_211_p1.read()));
}

void maxpool::thread_tmp_10_fu_259_p3() {
    tmp_10_fu_259_p3 = esl_concat<5,5>(add_ln16_fu_253_p2.read(), ap_const_lv5_0);
}

void maxpool::thread_tmp_11_fu_271_p3() {
    tmp_11_fu_271_p3 = esl_concat<5,2>(add_ln16_fu_253_p2.read(), ap_const_lv2_0);
}

void maxpool::thread_tmp_4_fu_358_p4() {
    tmp_4_fu_358_p4 = bitcast_ln17_fu_355_p1.read().range(30, 23);
}

void maxpool::thread_tmp_5_fu_376_p4() {
    tmp_5_fu_376_p4 = bitcast_ln17_1_fu_372_p1.read().range(30, 23);
}

void maxpool::thread_tmp_7_fu_181_p4() {
    tmp_7_fu_181_p4 = r_0_0_reg_98.read().range(4, 1);
}

void maxpool::thread_tmp_8_fu_191_p3() {
    tmp_8_fu_191_p3 = esl_concat<4,5>(tmp_7_fu_181_p4.read(), ap_const_lv5_0);
}

void maxpool::thread_tmp_9_fu_289_p4() {
    tmp_9_fu_289_p4 = c_0_0_reg_110.read().range(4, 1);
}

void maxpool::thread_tmp_s_fu_203_p3() {
    tmp_s_fu_203_p3 = esl_concat<4,2>(tmp_7_fu_181_p4.read(), ap_const_lv2_0);
}

void maxpool::thread_trunc_ln17_1_fu_386_p1() {
    trunc_ln17_1_fu_386_p1 = bitcast_ln17_1_fu_372_p1.read().range(23-1, 0);
}

void maxpool::thread_trunc_ln17_fu_368_p1() {
    trunc_ln17_fu_368_p1 = bitcast_ln17_fu_355_p1.read().range(23-1, 0);
}

void maxpool::thread_zext_ln14_fu_237_p1() {
    zext_ln14_fu_237_p1 = esl_zext<5,2>(k_r_0_0_reg_135.read());
}

void maxpool::thread_zext_ln15_fu_319_p1() {
    zext_ln15_fu_319_p1 = esl_zext<5,2>(k_c_0_0_reg_158.read());
}

void maxpool::thread_zext_ln16_1_fu_279_p1() {
    zext_ln16_1_fu_279_p1 = esl_zext<11,7>(tmp_11_fu_271_p3.read());
}

void maxpool::thread_zext_ln16_2_fu_341_p1() {
    zext_ln16_2_fu_341_p1 = esl_zext<11,5>(add_ln16_1_fu_335_p2.read());
}

void maxpool::thread_zext_ln16_fu_267_p1() {
    zext_ln16_fu_267_p1 = esl_zext<11,10>(tmp_10_fu_259_p3.read());
}

void maxpool::thread_zext_ln22_1_fu_211_p1() {
    zext_ln22_1_fu_211_p1 = esl_zext<10,6>(tmp_s_fu_203_p3.read());
}

void maxpool::thread_zext_ln22_2_fu_299_p1() {
    zext_ln22_2_fu_299_p1 = esl_zext<11,4>(tmp_9_fu_289_p4.read());
}

void maxpool::thread_zext_ln22_fu_199_p1() {
    zext_ln22_fu_199_p1 = esl_zext<10,9>(tmp_8_fu_191_p3.read());
}

void maxpool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_175_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_225_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_241_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_323_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

void maxpool::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

