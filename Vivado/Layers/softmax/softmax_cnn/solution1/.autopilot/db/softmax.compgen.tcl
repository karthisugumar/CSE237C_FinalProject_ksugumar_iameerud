# This script segment is generated automatically by AutoPilot

set id 1
set name softmax_fadd_32nsbkb
set corename simcore_fadd
set op fadd
set stage_num 5
set max_latency -1
set registered_input 1
set impl_style full_dsp
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fadd] == "ap_gen_simcore_fadd"} {
eval "ap_gen_simcore_fadd { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fadd, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fadd
set corename FAddSub
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


set id 2
set name softmax_fmul_32nscud
set corename simcore_fmul
set op fmul
set stage_num 4
set max_latency -1
set registered_input 1
set impl_style max_dsp
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fmul] == "ap_gen_simcore_fmul"} {
eval "ap_gen_simcore_fmul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fmul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fmul
set corename FMul
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    style ${impl_style} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


set id 3
set name softmax_fdiv_32nsdEe
set corename simcore_fdiv
set op fdiv
set stage_num 16
set max_latency -1
set registered_input 1
set Futype4reduceCEFanout 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 32
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_fdiv] == "ap_gen_simcore_fdiv"} {
eval "ap_gen_simcore_fdiv { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_fdiv, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op fdiv
set corename FDiv
if {${::AESL::PGuard_autocg_gen} && (${::AESL::PGuard_autocg_fpip} || ${::AESL::PGuard_autocg_fpv6en} || ${::AESL::PGuard_autocg_hpen})} {
if {[info proc ::AESL_LIB_XILINX_FPV6::fpv6_gen] == "::AESL_LIB_XILINX_FPV6::fpv6_gen"} {
eval "::AESL_LIB_XILINX_FPV6::fpv6_gen { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    Futype4reduceCEFanout ${Futype4reduceCEFanout} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_XILINX_FPV6::fpv6_gen, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 7
set hasByteEnable 0
set MemName softmax_expTable
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 400
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "00110001000011011010010000110011" "00110001000111001000100110110111" "00110001001011010000000001001110" "00110001001111110011001000100110" "00110001010100110100110111011100" "00110001011010011000011011110110" "00110001100000010000101100110010" "00110001100011101001110110001001" "00110001100111011001110101000111" "00110001101011100011000011011001" "00110001110000001000001010111000" "00110001110101001100000111010100" "00110001111010110010001000001100" "00110010000000011110111001011011" "00110010000011111001100010010111" "00110010000111101011001010111100" "00110010001011110110001101111100" "00110010010000011101010110011011" "00110010010101100011100001011011" "00110010011011001011111111110111" "00110010100000101101001100010100" "00110010100100001001010101011110" "00110010100111111100101000011001" "00110010101100001001100000111011" "00110010110000110010101011010010" "00110010110101111011000101110101" "00110010111011100110000010111010" "00110011000000111011100101100000" "00110011000100011001001111100010" "00110011001000001110001101100010" "00110011001100011100111100011001" "00110011010001001000001001100010" "00110011010110010010110100100110" "00110011011100000000010001011010" "00110011100001001010000101000010" "00110011100100101001010000100111" "00110011101000011111111010011010" "00110011101100110000100000011010" "00110011110001011101110001001110" "00110011110110101010101101110101" "00110011111100011010101011011110" "00110100000001011000101010111011" "00110100000100111001011000101110" "00110100001000110001101111000100" "00110100001101000100001101000010" "00110100010001110011100010011100" "00110100010111000010110001100100" "00110100011100110101010001001001" "00110100100001100111010111010000" "00110100100101001001100111111100" "00110100101001000011101011100101" "00110100101101011000000010010110" "00110100110010001001011101001111" "00110100110111011010111111111001" "00110100111101010000000010100001" "00110101000001110110001010000010" "00110101000101011001111110010011" "00110101001001010101101111111111" "00110101001101101100000000010111" "00110101010010011111100001101011" "00110101010111110011011000111000" "00110101011101101010111111101011" "00110101100010000101000011010101" "00110101100101101010011011110111" "00110101101001100111111100010110" "00110101101110000000000111001100" "00110101110010110101101111110101" "00110101111000001011111100100110" "00110101111110000110001000101100" "00110110000010010100000011001011" "00110110000101111011000000101010" "00110110001001111010010000101110" "00110110001110010100010110110110" "00110110010011001100000111110000" "00110110011000100100101011001000" "00110110011110100001011101101010" "00110110100010100011001001101000" "00110110100110001011101100110000" "00110110101010001100101101001001" "00110110101110101000101111011011" "00110110110011100010101001100010" "00110110111000111101100100100010" "00110110111110111100111110101001" "00110111000010110010010110101111" "00110111000110011100100000001100" "00110111001010011111010001101100" "00110111001110111101010000111110" "00110111010011111001010101001110" "00110111011001010110101000111010" "00110111011111011000101011110000" "00110111100011000001101010100001" "00110111100110101101011011000001" "00110111101010110001111110011010" "00110111101111010001111011100011" "00110111110100010000001010111001" "00110111111001101111111000010011" "00110111111111110100100101000010" "00111000000011010001000101000011" "00111000000110111110011101010011" "00111000001011000100110011010110" "00111000001111100110101111001110" "00111000010100100111001010101000" "00111000011010001001010010110100" "00111000100000001000010101010011" "00111000100011100000100110010111" "00111000100111001111100111000101" "00111000101011010111110000100101" "00111000101111111011101100000011" "00111000110100111110010100011110" "00111000111010100010111000100000" "00111001000000010110011110010001" "00111001000011110000001110100000" "00111001000111100000111000011010" "00111001001011101010110110001010" "00111001010000010000110010000110" "00111001010101010101101000100000" "00111001011010111100101001011101" "00111001100000100100101101011101" "00111001100011111111111101100001" "00111001100111110010010001010101" "00111001101011111110000100001000" "00111001110000100110000001011011" "00111001110101101101000110110011" "00111001111011010110100101110000" "00111010000000110011000010111010" "00111010000100001111110011011101" "00111010001000000011110001111010" "00111010001100010001011010100100" "00111010010000111011011010000111" "00111010010110000100101111011011" "00111010011011110000101101011101" "00111010100001000001011110101011" "00111010100100011111110000011000" "00111010101000010101011010001101" "00111010101100100100111001100000" "00111010110001010000111100001100" "00111010110110011100100010011100" "00111010111100001011000000101010" "00111011000001010000000000110010" "00111011000100101111110100010100" "00111011001000100111001010010000" "00111011001100111000100001000010" "00111011010001100110100111110001" "00111011010110110100011111111100" "00111011011100100101011111011100" "00111011100001011110101001010011" "00111011100100111111111111010100" "00111011101000111001000010000110" "00111011101101001100010001001100" "00111011110001111100011100111000" "00111011110111001100100111111111" "00111011111101000000001001110111" "00111100000001101101011000010000" "00111100000101010000010001011011" "00111100001001001011000001110100" "00111100001101100000001010000010" "00111100010010010010011011100101" "00111100010111100100111010101001" "00111100011101011011000000000010" "00111100100001111100001101101011" "00111100100101100000101010101110" "00111100101001011101001001011101" "00111100101101110100001011101001" "00111100110010101000100011111110" "00111100110111111101011000000000" "00111100111101110110000010000001" "00111101000010001011001001101001" "00111101000101110001001011001110" "00111101001001101111011001000101" "00111101001110001000010110000011" "00111101010010111110110110000110" "00111101011000010110000000000111" "00111101011110010001001111111001" "00111101100010011010001100001011" "00111101100110000001110010111111" "00111101101010000001110000101110" "00111101101110011100101001010110" "00111101110011010101010010000010" "00111101111000101110110011000100" "00111101111110101100101001110000" "00111110000010101001010101010101" "00111110000110010010100010000100" "00111110001010010100010000011101" "00111110001110110001000101100100" "00111110010011101011110111110110" "00111110011001000111110000111100" "00111110011111001000001111101010" "00111110100010111000100101001010" "00111110100110100011011000100001" "00111110101010100110111000010100" "00111110101111000101101010110010" "00111110110100000010100111100110" "00111110111001100000111001110010" "00111110111111100100000001101110" "00111111000011000111111011101011" "00111111000110110100010110011000" "00111111001010111001101000011000" "00111111001111011010011001000011" "00111111010100011001100001010111" "00111111011001111010001101101101" "00111111100000000000000000000000" "00111111100011010111011000111110" "00111111100111000101011011101101" "00111111101011001100100000101100" "00111111101111101111010000011101" "00111111110100110000100101001100" "00111111111010010011101100110000" "01000000000000001110000101010011" "01000000000011100110111101000011" "01000000000111010110101000100011" "01000000001011011111100001010100" "01000000010000000100010001000010" "01000000010101000111110011001100" "01000000011010101101010111000010" "01000000100000011100010000110011" "01000000100011110110100111111111" "01000000100111100111111100111110" "01000000101011110010101010010100" "01000000110000011001011010110110" "01000000110101011111001011011001" "01000000111011000111001100100110" "01000001000000101010100010100010" "01000001000100000110011001110101" "01000001000111111001011001000000" "01000001001100000101111011101110" "01000001010000101110101101111111" "01000001010101110110101101111001" "01000001011011100001001101100010" "01000001100000111000111010100011" "01000001100100010110010010100110" "01000001101000001010111100101110" "01000001101100011001010101100111" "01000001110001000100001010011111" "01000001110110001110011010101111" "01000001111011111011011001111010" "01000010000001000111011000111001" "01000010000100100110010010011000" "01000010001000011100101000001010" "01000010001100101100111000000011" "01000010010001011001110000011100" "01000010010110100110010010000001" "01000010011100010101110001110100" "01000010100001010101111101100111" "01000010100100110110011001001011" "01000010101000101110011011011000" "01000010101101000000100011000101" "01000010110001101111011111111000" "01000010110110111110010011110100" "01000010111100110000010101010101" "01000011000001100100101000101111" "01000011000101000110100111000101" "01000011001001000000010110011100" "01000011001101010100010110110010" "01000011010010000101011000111001" "01000011010111010110100000001011" "01000011011101001011000100100010" "01000011100001110011011010010101" "01000011100101010110111100000111" "01000011101001010010011001011000" "01000011101101101000010011001100" "01000011110010011011011011100011" "01000011110111101110110111001011" "01000011111101100101111111100001" "01000100000010000010010010011010" "01000100000101100111011000010101" "01000100001001100100100100010001" "01000100001101111100011000011000" "01000100010010110001100111111001" "01000100011000000111011000111010" "01000100011110000001000110010101" "01000100100010010001010001000011" "01000100100101110111111011110010" "01000100101001110110110111001001" "01000100101110010000100110011001" "01000100110011000111111110000000" "01000100111000100000000101011011" "01000100111110011100011001000101" "01000101000010100000010110010001" "01000101000110001000100110100010" "01000101001010001001010010000100" "01000101001110100100111101010100" "01000101010011011110011101111101" "01000101011000111000111100110100" "01000101011110110111110111110101" "01000101100010101111100010001001" "01000101100110011001011000100111" "01000101101010011011110101000111" "01000101101110111001011101001100" "01000101110011110101000111110100" "01000101111001010001111111001010" "01000101111111010011100010101100" "01000110000010111110110100101100" "01000110000110101010010010000100" "01000110001010101110100000010100" "01000110001111001110000110000110" "01000110010100001011111011101000" "01000110011001101011001100100000" "01000110011111101111011001101110" "01000110100011001110001101111101" "01000110100110111011010010111110" "01000110101011000001010011101110" "01000110101111100010111000000101" "01000110110100100010111001011111" "01000110111010000100100100111101" "01000111000000000101101110100000" "01000111000011011101101110000001" "01000111000111001100011011010110" "01000111001011010100001111011011" "01000111001111110111110011001101" "01000111010100111010000001011101" "01000111011010011110001000100100" "01000111100000010011110110010101" "01000111100011101101010100111001" "01000111100111011101101011010010" "01000111101011100111010011011101" "01000111110000001100110111100011" "01000111110101010001010011100110" "01000111111010110111110111011100" "01001000000000100010000100010111" "01001000000011111101000010101000" "01001000000111101111000010110011" "01001000001011111010011111110111" "01001000010000100010000101001010" "01001000010101101000101111111111" "01001000011011010001110001101000" "01001000100000110000011000101001" "01001000100100001100110111010010" "01001000101000000000100001111101" "01001000101100001101110100101110" "01001000110000110111011100000110" "01001000110110000000010110101101" "01001000111011101011110111001101" "01001001000000111110110011001111" "01001001000100011100110010111010" "01001001001000010010001000110100" "01001001001100100001010010000110" "01001001010001001100111100011100" "01001001010110011000000111110011" "01001001011100000110001000010010" "01001001100001001101010100001011" "01001001100100101100110101100010" "01001001101000100011110111011010" "01001001101100110100111000000010" "01001001110001100010100110010000" "01001001110110110000000011010110" "01001001111100100000100100111010" "01001010000001011011111011100000" "01001010000100111100111111001111" "01001010001000110101101101110100" "01001010001101001000100110100101" "01001010010001111000011001100101" "01001010010111001000001001011100" "01001010011100111011001101001011" "01001010100001101010101001010000" "01001010100101001101010000000010" "01001010101001000111101100000101" "01001010101101011100011101110100" "01001010110010001110010110100001" "01001010110111100000011010001000" "01001010111101010110000001001011" "01001011000001111001011101011111" "01001011000101011101100111111111" "01001011001001011001110010010000" "01001011001101110000011101110011" "01001011010010100100011101000111" "01001011010111111000110101011111" "01001011011101110001000000111101" "01001011100010001000011000001111" "01001011100101101110000111001001" "01001011101001101100000000011001" "01001011101110000100100110100100" "01001011110010111010101101011100" "01001011111000010001011011100111" "01001011111110001100001100101000" "01001100000010010111011001100011" "01001100000101111110101101100100" "01001100001001111110010110100010" "01001100001110011000111000001101" "01001100010011010001000111100011" "01001100011000101010001100100011" "01001100011110100111100100010000" "01001100100010100110100001011110" "01001100100110001111011011010010" "01001100101010010000110100110001" "01001100101110101101010010110001" "01001100110011100111101011100001" "01001100111001000011001000011001" "01001100111111000011000111111100" "01001101000010110101110000000011" "01001101000110100000010000011000" "01001101001010100011011011001000" "01001101001111000001110110010101" "01001101010011111110011001011011" "01001101011001011100001111001101" "01001101011111011110110111101111" "01001101100011000101000101010101" "01001101100110110001001100110111" "01001101101010110110001001101011" "01001101101111010110100010111011" "01001101110100010101010001010101" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 8
set hasByteEnable 0
set MemName softmax_idx
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 32
set AddrRange 10
set AddrWd 4
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

set axilite_register_dict [dict create]
# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 9 \
    name in_r \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename in_r \
    op interface \
    ports { in_r_address0 { O 4 vector } in_r_ce0 { O 1 bit } in_r_q0 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'in_r'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 10 \
    name out_r \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename out_r \
    op interface \
    ports { out_r_address0 { O 4 vector } out_r_ce0 { O 1 bit } out_r_we0 { O 1 bit } out_r_d0 { O 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'out_r'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


