// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_HH_
#define _softmax_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_fadd_32nsbkb.h"
#include "softmax_fmul_32nscud.h"
#include "softmax_fdiv_32nsdEe.h"
#include "softmax_expTable.h"
#include "softmax_idx.h"

namespace ap_rtl {

struct softmax : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<4> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    softmax(sc_module_name name);
    SC_HAS_PROCESS(softmax);

    ~softmax();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    softmax_expTable* expTable_U;
    softmax_idx* idx_U;
    softmax_fadd_32nsbkb<1,5,32,32,32>* softmax_fadd_32nsbkb_U1;
    softmax_fmul_32nscud<1,4,32,32,32>* softmax_fmul_32nscud_U2;
    softmax_fdiv_32nsdEe<1,16,32,32,32>* softmax_fdiv_32nsdEe_U3;
    sc_signal< sc_lv<33> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > expTable_address0;
    sc_signal< sc_logic > expTable_ce0;
    sc_signal< sc_lv<32> > expTable_q0;
    sc_signal< sc_lv<32> > reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<4> > p_fu_205_p2;
    sc_signal< sc_lv<4> > p_reg_393;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln13_fu_211_p1;
    sc_signal< sc_lv<64> > zext_ln13_reg_398;
    sc_signal< sc_lv<1> > icmp_ln12_fu_199_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > grp_fu_181_p2;
    sc_signal< sc_lv<32> > x_assign_reg_413;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > p_Val2_s_fu_216_p1;
    sc_signal< sc_lv<32> > p_Val2_s_reg_418;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > p_Val2_5_fu_329_p3;
    sc_signal< sc_lv<32> > p_Val2_5_reg_423;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_176_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<4> > p_1_fu_374_p2;
    sc_signal< sc_lv<4> > p_1_reg_442;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > zext_ln18_fu_380_p1;
    sc_signal< sc_lv<64> > zext_ln18_reg_447;
    sc_signal< sc_lv<1> > icmp_ln17_fu_368_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<4> > idx_address0;
    sc_signal< sc_logic > idx_ce0;
    sc_signal< sc_logic > idx_we0;
    sc_signal< sc_lv<32> > idx_q0;
    sc_signal< sc_lv<32> > denom_0_reg_142;
    sc_signal< sc_lv<4> > p_0_reg_154;
    sc_signal< sc_lv<4> > p1_0_reg_165;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<64> > sext_ln14_fu_363_p1;
    sc_signal< sc_lv<64> > sext_ln18_fu_385_p1;
    sc_signal< sc_lv<32> > add_ln13_fu_356_p2;
    sc_signal< sc_lv<32> > grp_fu_187_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<23> > tmp_V_1_fu_229_p1;
    sc_signal< sc_lv<25> > mantissa_V_fu_233_p4;
    sc_signal< sc_lv<8> > tmp_V_fu_219_p4;
    sc_signal< sc_lv<9> > zext_ln339_fu_247_p1;
    sc_signal< sc_lv<9> > add_ln339_fu_251_p2;
    sc_signal< sc_lv<8> > sub_ln1311_fu_265_p2;
    sc_signal< sc_lv<1> > isNeg_fu_257_p3;
    sc_signal< sc_lv<9> > sext_ln1311_fu_271_p1;
    sc_signal< sc_lv<9> > ush_fu_275_p3;
    sc_signal< sc_lv<32> > sext_ln1311_1_fu_283_p1;
    sc_signal< sc_lv<25> > sext_ln1311_2_fu_287_p1;
    sc_signal< sc_lv<79> > zext_ln682_fu_243_p1;
    sc_signal< sc_lv<79> > zext_ln1287_fu_291_p1;
    sc_signal< sc_lv<25> > r_V_fu_295_p2;
    sc_signal< sc_lv<1> > tmp_fu_307_p3;
    sc_signal< sc_lv<79> > r_V_1_fu_301_p2;
    sc_signal< sc_lv<32> > zext_ln662_fu_315_p1;
    sc_signal< sc_lv<32> > tmp_1_fu_319_p4;
    sc_signal< sc_lv<1> > p_Result_s_fu_337_p3;
    sc_signal< sc_lv<32> > result_V_1_fu_344_p2;
    sc_signal< sc_lv<32> > p_Val2_6_fu_349_p3;
    sc_signal< sc_lv<33> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<33> ap_ST_fsm_state1;
    static const sc_lv<33> ap_ST_fsm_state2;
    static const sc_lv<33> ap_ST_fsm_state3;
    static const sc_lv<33> ap_ST_fsm_state4;
    static const sc_lv<33> ap_ST_fsm_state5;
    static const sc_lv<33> ap_ST_fsm_state6;
    static const sc_lv<33> ap_ST_fsm_state7;
    static const sc_lv<33> ap_ST_fsm_state8;
    static const sc_lv<33> ap_ST_fsm_state9;
    static const sc_lv<33> ap_ST_fsm_state10;
    static const sc_lv<33> ap_ST_fsm_state11;
    static const sc_lv<33> ap_ST_fsm_state12;
    static const sc_lv<33> ap_ST_fsm_state13;
    static const sc_lv<33> ap_ST_fsm_state14;
    static const sc_lv<33> ap_ST_fsm_state15;
    static const sc_lv<33> ap_ST_fsm_state16;
    static const sc_lv<33> ap_ST_fsm_state17;
    static const sc_lv<33> ap_ST_fsm_state18;
    static const sc_lv<33> ap_ST_fsm_state19;
    static const sc_lv<33> ap_ST_fsm_state20;
    static const sc_lv<33> ap_ST_fsm_state21;
    static const sc_lv<33> ap_ST_fsm_state22;
    static const sc_lv<33> ap_ST_fsm_state23;
    static const sc_lv<33> ap_ST_fsm_state24;
    static const sc_lv<33> ap_ST_fsm_state25;
    static const sc_lv<33> ap_ST_fsm_state26;
    static const sc_lv<33> ap_ST_fsm_state27;
    static const sc_lv<33> ap_ST_fsm_state28;
    static const sc_lv<33> ap_ST_fsm_state29;
    static const sc_lv<33> ap_ST_fsm_state30;
    static const sc_lv<33> ap_ST_fsm_state31;
    static const sc_lv<33> ap_ST_fsm_state32;
    static const sc_lv<33> ap_ST_fsm_state33;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_41200000;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_C8;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_356_p2();
    void thread_add_ln339_fu_251_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_expTable_address0();
    void thread_expTable_ce0();
    void thread_icmp_ln12_fu_199_p2();
    void thread_icmp_ln17_fu_368_p2();
    void thread_idx_address0();
    void thread_idx_ce0();
    void thread_idx_we0();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_isNeg_fu_257_p3();
    void thread_mantissa_V_fu_233_p4();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_p_1_fu_374_p2();
    void thread_p_Result_s_fu_337_p3();
    void thread_p_Val2_5_fu_329_p3();
    void thread_p_Val2_6_fu_349_p3();
    void thread_p_Val2_s_fu_216_p1();
    void thread_p_fu_205_p2();
    void thread_r_V_1_fu_301_p2();
    void thread_r_V_fu_295_p2();
    void thread_result_V_1_fu_344_p2();
    void thread_sext_ln1311_1_fu_283_p1();
    void thread_sext_ln1311_2_fu_287_p1();
    void thread_sext_ln1311_fu_271_p1();
    void thread_sext_ln14_fu_363_p1();
    void thread_sext_ln18_fu_385_p1();
    void thread_sub_ln1311_fu_265_p2();
    void thread_tmp_1_fu_319_p4();
    void thread_tmp_V_1_fu_229_p1();
    void thread_tmp_V_fu_219_p4();
    void thread_tmp_fu_307_p3();
    void thread_ush_fu_275_p3();
    void thread_zext_ln1287_fu_291_p1();
    void thread_zext_ln13_fu_211_p1();
    void thread_zext_ln18_fu_380_p1();
    void thread_zext_ln339_fu_247_p1();
    void thread_zext_ln662_fu_315_p1();
    void thread_zext_ln682_fu_243_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
