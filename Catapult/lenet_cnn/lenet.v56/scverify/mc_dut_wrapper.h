// Generated by ZYANG
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#ifdef CCS_SYSC
namespace HDL {
#endif
#if defined(CCS_DUT_SYSC)
// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace
    ccs_design {
#if defined(CCS_DUT_CYCLE)
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
#include "rtl.cxx"
#endif
#endif
}
typedef
    ccs_design::HDL::lenet ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
#ifdef VCS_SYSTEMC
// VCS support - ccs_DUT_wrapper is derived from VCS-generated SystemC wrapper around HDL code
class ccs_DUT_wrapper : public TOP_HDL_ENTITY
{
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  : TOP_HDL_ENTITY(nm)
  {
  // elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};

#else
// non VCS simulators - ccs_DUT_wrapper is derived from mc_foreign_module (adding 2nd ctor arg)
class ccs_DUT_wrapper: public mc_foreign_module
{
public:
  // Interface Ports
  sc_in<bool> clk;
  sc_in<sc_logic> rst;
  sc_in<sc_logic> image_in_rsc_s_tdone;
  sc_in<sc_logic> image_in_rsc_tr_write_done;
  sc_in<sc_logic> image_in_rsc_RREADY;
  sc_out<sc_logic> image_in_rsc_RVALID;
  sc_out<sc_logic> image_in_rsc_RUSER;
  sc_out<sc_logic> image_in_rsc_RLAST;
  sc_out<sc_lv<2> > image_in_rsc_RRESP;
  sc_out<sc_lv<32> > image_in_rsc_RDATA;
  sc_out<sc_logic> image_in_rsc_RID;
  sc_out<sc_logic> image_in_rsc_ARREADY;
  sc_in<sc_logic> image_in_rsc_ARVALID;
  sc_in<sc_logic> image_in_rsc_ARUSER;
  sc_in<sc_lv<4> > image_in_rsc_ARREGION;
  sc_in<sc_lv<4> > image_in_rsc_ARQOS;
  sc_in<sc_lv<3> > image_in_rsc_ARPROT;
  sc_in<sc_lv<4> > image_in_rsc_ARCACHE;
  sc_in<sc_logic> image_in_rsc_ARLOCK;
  sc_in<sc_lv<2> > image_in_rsc_ARBURST;
  sc_in<sc_lv<3> > image_in_rsc_ARSIZE;
  sc_in<sc_lv<8> > image_in_rsc_ARLEN;
  sc_in<sc_lv<12> > image_in_rsc_ARADDR;
  sc_in<sc_logic> image_in_rsc_ARID;
  sc_in<sc_logic> image_in_rsc_BREADY;
  sc_out<sc_logic> image_in_rsc_BVALID;
  sc_out<sc_logic> image_in_rsc_BUSER;
  sc_out<sc_lv<2> > image_in_rsc_BRESP;
  sc_out<sc_logic> image_in_rsc_BID;
  sc_out<sc_logic> image_in_rsc_WREADY;
  sc_in<sc_logic> image_in_rsc_WVALID;
  sc_in<sc_logic> image_in_rsc_WUSER;
  sc_in<sc_logic> image_in_rsc_WLAST;
  sc_in<sc_lv<4> > image_in_rsc_WSTRB;
  sc_in<sc_lv<32> > image_in_rsc_WDATA;
  sc_out<sc_logic> image_in_rsc_AWREADY;
  sc_in<sc_logic> image_in_rsc_AWVALID;
  sc_in<sc_logic> image_in_rsc_AWUSER;
  sc_in<sc_lv<4> > image_in_rsc_AWREGION;
  sc_in<sc_lv<4> > image_in_rsc_AWQOS;
  sc_in<sc_lv<3> > image_in_rsc_AWPROT;
  sc_in<sc_lv<4> > image_in_rsc_AWCACHE;
  sc_in<sc_logic> image_in_rsc_AWLOCK;
  sc_in<sc_lv<2> > image_in_rsc_AWBURST;
  sc_in<sc_lv<3> > image_in_rsc_AWSIZE;
  sc_in<sc_lv<8> > image_in_rsc_AWLEN;
  sc_in<sc_lv<12> > image_in_rsc_AWADDR;
  sc_in<sc_logic> image_in_rsc_AWID;
  sc_out<sc_logic> image_in_rsc_triosy_lz;
  sc_out<sc_lv<320> > out_rsc_dat;
  sc_out<sc_logic> out_rsc_triosy_lz;
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  :
    mc_foreign_module(nm, hdl_name), 
    clk("clk"), 
    rst("rst"), 
    image_in_rsc_s_tdone("image_in_rsc_s_tdone"), 
    image_in_rsc_tr_write_done("image_in_rsc_tr_write_done"), 
    image_in_rsc_RREADY("image_in_rsc_RREADY"), 
    image_in_rsc_RVALID("image_in_rsc_RVALID"), 
    image_in_rsc_RUSER("image_in_rsc_RUSER"), 
    image_in_rsc_RLAST("image_in_rsc_RLAST"), 
    image_in_rsc_RRESP("image_in_rsc_RRESP"), 
    image_in_rsc_RDATA("image_in_rsc_RDATA"), 
    image_in_rsc_RID("image_in_rsc_RID"), 
    image_in_rsc_ARREADY("image_in_rsc_ARREADY"), 
    image_in_rsc_ARVALID("image_in_rsc_ARVALID"), 
    image_in_rsc_ARUSER("image_in_rsc_ARUSER"), 
    image_in_rsc_ARREGION("image_in_rsc_ARREGION"), 
    image_in_rsc_ARQOS("image_in_rsc_ARQOS"), 
    image_in_rsc_ARPROT("image_in_rsc_ARPROT"), 
    image_in_rsc_ARCACHE("image_in_rsc_ARCACHE"), 
    image_in_rsc_ARLOCK("image_in_rsc_ARLOCK"), 
    image_in_rsc_ARBURST("image_in_rsc_ARBURST"), 
    image_in_rsc_ARSIZE("image_in_rsc_ARSIZE"), 
    image_in_rsc_ARLEN("image_in_rsc_ARLEN"), 
    image_in_rsc_ARADDR("image_in_rsc_ARADDR"), 
    image_in_rsc_ARID("image_in_rsc_ARID"), 
    image_in_rsc_BREADY("image_in_rsc_BREADY"), 
    image_in_rsc_BVALID("image_in_rsc_BVALID"), 
    image_in_rsc_BUSER("image_in_rsc_BUSER"), 
    image_in_rsc_BRESP("image_in_rsc_BRESP"), 
    image_in_rsc_BID("image_in_rsc_BID"), 
    image_in_rsc_WREADY("image_in_rsc_WREADY"), 
    image_in_rsc_WVALID("image_in_rsc_WVALID"), 
    image_in_rsc_WUSER("image_in_rsc_WUSER"), 
    image_in_rsc_WLAST("image_in_rsc_WLAST"), 
    image_in_rsc_WSTRB("image_in_rsc_WSTRB"), 
    image_in_rsc_WDATA("image_in_rsc_WDATA"), 
    image_in_rsc_AWREADY("image_in_rsc_AWREADY"), 
    image_in_rsc_AWVALID("image_in_rsc_AWVALID"), 
    image_in_rsc_AWUSER("image_in_rsc_AWUSER"), 
    image_in_rsc_AWREGION("image_in_rsc_AWREGION"), 
    image_in_rsc_AWQOS("image_in_rsc_AWQOS"), 
    image_in_rsc_AWPROT("image_in_rsc_AWPROT"), 
    image_in_rsc_AWCACHE("image_in_rsc_AWCACHE"), 
    image_in_rsc_AWLOCK("image_in_rsc_AWLOCK"), 
    image_in_rsc_AWBURST("image_in_rsc_AWBURST"), 
    image_in_rsc_AWSIZE("image_in_rsc_AWSIZE"), 
    image_in_rsc_AWLEN("image_in_rsc_AWLEN"), 
    image_in_rsc_AWADDR("image_in_rsc_AWADDR"), 
    image_in_rsc_AWID("image_in_rsc_AWID"), 
    image_in_rsc_triosy_lz("image_in_rsc_triosy_lz"), 
    out_rsc_dat("out_rsc_dat"), 
    out_rsc_triosy_lz("out_rsc_triosy_lz")
  {
    elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};
#endif

#endif

#ifdef CCS_SYSC
} // end namespace HDL
#endif
#endif


